# services:
#   postgres-db:
#     image: postgres
#     container_name: postgres-db
#     environment:
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_DB: ${POSTGRES_DB}
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#     restart: unless-stopped

# volumes:
#   postgres-data:


networks:
  app-network:
    driver: bridge
services:
  pokedex-db:
    image: postgres
    volumes:
      - ./docker_ressources/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pg_pokedex_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 1s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  api:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      pokedex-db:
        condition: service_healthy
    networks:
      - app-network


volumes:
  pg_pokedex_data: