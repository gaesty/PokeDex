// <auto-generated />
using BourgPalette.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BourgPalette.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BourgPalette.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("abilities", (string)null);
                });

            modelBuilder.Entity("BourgPalette.Models.Evolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Condition")
                        .HasColumnType("text")
                        .HasColumnName("condition");

                    b.Property<int?>("FromPokemonId")
                        .HasColumnType("integer")
                        .HasColumnName("from_pokemon_id");

                    b.Property<int?>("ToPokemonId")
                        .HasColumnType("integer")
                        .HasColumnName("to_pokemon_id");

                    b.HasKey("Id");

                    b.HasIndex("FromPokemonId");

                    b.HasIndex("ToPokemonId");

                    b.ToTable("evolutions", (string)null);
                });

            modelBuilder.Entity("BourgPalette.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ArtworkUrl")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("SpriteUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("media", (string)null);
                });

            modelBuilder.Entity("BourgPalette.Models.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("Accuracy")
                        .HasColumnType("double precision")
                        .HasColumnName("accuracy");

                    b.Property<string>("Category")
                        .HasColumnType("text")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("PP")
                        .HasColumnType("integer")
                        .HasColumnName("pp");

                    b.Property<int?>("Power")
                        .HasColumnType("integer")
                        .HasColumnName("power");

                    b.Property<int?>("TypeId")
                        .HasColumnType("integer")
                        .HasColumnName("type_id");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("moves", (string)null);
                });

            modelBuilder.Entity("BourgPalette.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BaseExperience")
                        .HasColumnType("integer")
                        .HasColumnName("base_experience");

                    b.Property<string>("Form")
                        .HasColumnType("text")
                        .HasColumnName("form");

                    b.Property<double?>("Height")
                        .HasColumnType("double precision")
                        .HasColumnName("height");

                    b.Property<int?>("ImageId")
                        .HasColumnType("integer")
                        .HasColumnName("image_id");

                    b.Property<int?>("SpeciesId")
                        .HasColumnType("integer")
                        .HasColumnName("species_id");

                    b.Property<double?>("Weight")
                        .HasColumnType("double precision")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("pokemon", (string)null);
                });

            modelBuilder.Entity("BourgPalette.Models.PokemonAbility", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("integer")
                        .HasColumnName("pokemon_id");

                    b.Property<int>("AbilityId")
                        .HasColumnType("integer")
                        .HasColumnName("ability_id");

                    b.Property<bool?>("IsHidden")
                        .HasColumnType("boolean")
                        .HasColumnName("is_hidden");

                    b.HasKey("PokemonId", "AbilityId");

                    b.HasIndex("AbilityId");

                    b.ToTable("pokemon_abilities", (string)null);
                });

            modelBuilder.Entity("BourgPalette.Models.PokemonType", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("integer")
                        .HasColumnName("pokemon_id");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer")
                        .HasColumnName("type_id");

                    b.HasKey("PokemonId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("pokemon_types", (string)null);
                });

            modelBuilder.Entity("BourgPalette.Models.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Generation")
                        .HasColumnType("integer");

                    b.Property<string>("NameEn")
                        .HasColumnType("text")
                        .HasColumnName("name_en");

                    b.Property<string>("NameFr")
                        .HasColumnType("text")
                        .HasColumnName("name_fr");

                    b.Property<int?>("PokedexNumber")
                        .HasColumnType("integer")
                        .HasColumnName("pokedex_number");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("species", (string)null);
                });

            modelBuilder.Entity("BourgPalette.Models.Stat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Attack")
                        .HasColumnType("integer")
                        .HasColumnName("attack");

                    b.Property<int?>("Defense")
                        .HasColumnType("integer")
                        .HasColumnName("defense");

                    b.Property<int?>("HP")
                        .HasColumnType("integer")
                        .HasColumnName("hp");

                    b.Property<int?>("PokemonId")
                        .HasColumnType("integer")
                        .HasColumnName("pokemon_id");

                    b.Property<int?>("SpecialAttack")
                        .HasColumnType("integer")
                        .HasColumnName("special_attack");

                    b.Property<int?>("SpecialDefense")
                        .HasColumnType("integer")
                        .HasColumnName("special_defense");

                    b.Property<int?>("Speed")
                        .HasColumnType("integer")
                        .HasColumnName("speed");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId");

                    b.ToTable("stats", (string)null);
                });

            modelBuilder.Entity("BourgPalette.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("teams", (string)null);
                });

            modelBuilder.Entity("BourgPalette.Models.TeamPokemon", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("integer")
                        .HasColumnName("team_id");

                    b.Property<int>("PokemonId")
                        .HasColumnType("integer")
                        .HasColumnName("pokemon_id");

                    b.Property<int?>("Slot")
                        .HasColumnType("integer")
                        .HasColumnName("slot");

                    b.HasKey("TeamId", "PokemonId");

                    b.HasIndex("PokemonId");

                    b.ToTable("team_pokemons", (string)null);
                });

            modelBuilder.Entity("BourgPalette.Models.TypeDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("types", (string)null);
                });

            modelBuilder.Entity("BourgPalette.Models.Evolution", b =>
                {
                    b.HasOne("BourgPalette.Models.Pokemon", "FromPokemon")
                        .WithMany("FromEvolutions")
                        .HasForeignKey("FromPokemonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BourgPalette.Models.Pokemon", "ToPokemon")
                        .WithMany("ToEvolutions")
                        .HasForeignKey("ToPokemonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FromPokemon");

                    b.Navigation("ToPokemon");
                });

            modelBuilder.Entity("BourgPalette.Models.Move", b =>
                {
                    b.HasOne("BourgPalette.Models.TypeDefinition", "Type")
                        .WithMany("Moves")
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BourgPalette.Models.Pokemon", b =>
                {
                    b.HasOne("BourgPalette.Models.Media", "Image")
                        .WithMany("Pokemons")
                        .HasForeignKey("ImageId");

                    b.HasOne("BourgPalette.Models.Species", "Species")
                        .WithMany("Pokemons")
                        .HasForeignKey("SpeciesId");

                    b.Navigation("Image");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("BourgPalette.Models.PokemonAbility", b =>
                {
                    b.HasOne("BourgPalette.Models.Ability", "Ability")
                        .WithMany("PokemonAbilities")
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BourgPalette.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonAbilities")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("BourgPalette.Models.PokemonType", b =>
                {
                    b.HasOne("BourgPalette.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonTypes")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BourgPalette.Models.TypeDefinition", "TypeDefinition")
                        .WithMany("PokemonTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");

                    b.Navigation("TypeDefinition");
                });

            modelBuilder.Entity("BourgPalette.Models.Stat", b =>
                {
                    b.HasOne("BourgPalette.Models.Pokemon", "Pokemon")
                        .WithMany("Stats")
                        .HasForeignKey("PokemonId");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("BourgPalette.Models.TeamPokemon", b =>
                {
                    b.HasOne("BourgPalette.Models.Pokemon", "Pokemon")
                        .WithMany("TeamPokemons")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BourgPalette.Models.Team", "Team")
                        .WithMany("TeamPokemons")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BourgPalette.Models.Ability", b =>
                {
                    b.Navigation("PokemonAbilities");
                });

            modelBuilder.Entity("BourgPalette.Models.Media", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("BourgPalette.Models.Pokemon", b =>
                {
                    b.Navigation("FromEvolutions");

                    b.Navigation("PokemonAbilities");

                    b.Navigation("PokemonTypes");

                    b.Navigation("Stats");

                    b.Navigation("TeamPokemons");

                    b.Navigation("ToEvolutions");
                });

            modelBuilder.Entity("BourgPalette.Models.Species", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("BourgPalette.Models.Team", b =>
                {
                    b.Navigation("TeamPokemons");
                });

            modelBuilder.Entity("BourgPalette.Models.TypeDefinition", b =>
                {
                    b.Navigation("Moves");

                    b.Navigation("PokemonTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
